{"version":3,"sources":["/Users/tobias/github/abarbanell/limitless-garden/public/spa/$_lazy_route_resource lazy","/Users/tobias/github/abarbanell/limitless-garden/public/spa/app/app.component.css","/Users/tobias/github/abarbanell/limitless-garden/public/spa/app/app.component.html","/Users/tobias/github/abarbanell/limitless-garden/public/spa/app/app.component.ts","/Users/tobias/github/abarbanell/limitless-garden/public/spa/app/app.module.ts","/Users/tobias/github/abarbanell/limitless-garden/public/spa/app/app.routing.ts","/Users/tobias/github/abarbanell/limitless-garden/public/spa/app/auth.service.ts","/Users/tobias/github/abarbanell/limitless-garden/public/spa/app/data.service.ts","/Users/tobias/github/abarbanell/limitless-garden/public/spa/app/home/home.component.css","/Users/tobias/github/abarbanell/limitless-garden/public/spa/app/home/home.component.html","/Users/tobias/github/abarbanell/limitless-garden/public/spa/app/home/home.component.ts","/Users/tobias/github/abarbanell/limitless-garden/public/spa/app/navbar/navbar.component.css","/Users/tobias/github/abarbanell/limitless-garden/public/spa/app/navbar/navbar.component.html","/Users/tobias/github/abarbanell/limitless-garden/public/spa/app/navbar/navbar.component.ts","/Users/tobias/github/abarbanell/limitless-garden/public/spa/environments/environment.ts","/Users/tobias/github/abarbanell/limitless-garden/public/spa/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../public/spa/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/tobias/github/abarbanell/limitless-garden/public/spa/$$_lazy_route_resource lazy\n// module id = ../../../../../public/spa/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/tobias/github/abarbanell/limitless-garden/public/spa/app/app.component.css\n// module id = ../../../../../public/spa/app/app.component.css\n// module chunks = main","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n    <h1>Welcome to app!</h1>\\n    app.component.html\\n    \\n    <router-outlet></router-outlet>\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/tobias/github/abarbanell/limitless-garden/public/spa/app/app.component.html\n// module id = ../../../../../public/spa/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/tobias/github/abarbanell/limitless-garden/public/spa/app/app.component.ts","// Angular imports\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n// Components\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HomeComponent } from './home/home.component';\n\n// Services\nimport { DataService } from \"./data.service\";\nimport { AuthService } from \"./auth.service\";\n\n// routing\nimport { routing } from './app.routing';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    routing\n  ],\n  providers: [\n    AuthService,\n    DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/tobias/github/abarbanell/limitless-garden/public/spa/app/app.module.ts","\nimport { Router, RouterModule } from '@angular/router';\n \nimport { HomeComponent } from './home/home.component';\n\nexport const routing = RouterModule.forRoot([\n  { path: '', component: HomeComponent }\n])\n\n\n// WEBPACK FOOTER //\n// /Users/tobias/github/abarbanell/limitless-garden/public/spa/app/app.routing.ts","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs/Rx';\nimport { HttpClient, HttpResponse, HttpHeaders} from '@angular/common/http';\n\n@Injectable()\nexport class AuthService {\n  private _url = \"/api/me\";\n  private _baseurl = \"\";\n\n  public user: IProfile;\n  public initialized = new Subject<boolean>();\n\n  constructor(private _http: HttpClient) {\n    this.getProfile().subscribe(u => {\n      this.user = u;\n      this.initialized.next(true);\n    })\n  }\n\n  public authenticated() {\n    return true;\n  }\n\n  getProfile(): Observable<IProfile> {\n    return this._http.get<Object>(this._baseurl + this._url).map(res => {\n      let p = new Profile();\n      p.displayName = res['user'].profile.displayName; // TODO: need dig deeper in resource object, once we get it....\n      p.rc = res['rc'] || \"UNDEFINED\"\n      p.httpStatus = 200;\n      console.log(\"AuthService.getProfile response status: \"+ p.httpStatus);\n      return p;\n    }).catch(e => {\n      let p = new Profile();\n      p.httpStatus = e.status;\n      p.rc = e.statusText;\n      p.displayName = \"\"\n      console.log(\"AuthService.getProfile catch status: \"+ p.httpStatus);\n      return Observable.of(p)\n    })\n  }\n\n}\n\nexport interface IProfile {\n  displayName: string,\n  rc: string,\n  httpStatus: number\n}\n\nclass Profile implements IProfile {\n  displayName: string;\n  rc: string;\n  httpStatus: number;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/tobias/github/abarbanell/limitless-garden/public/spa/app/auth.service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Rx';\n\n@Injectable()\nexport class DataService {\n\n  constructor() { }\n\n  getCollections() {\n    return Observable.of([\n      \"table1\",\n      \"table2\",\n      \"table3\"\n    ]);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/tobias/github/abarbanell/limitless-garden/public/spa/app/data.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/tobias/github/abarbanell/limitless-garden/public/spa/app/home/home.component.css\n// module id = ../../../../../public/spa/app/home/home.component.css\n// module chunks = main","module.exports = \"<div class=\\\"panel panel-default\\\">\\n  <div class=\\\"panel-body\\\">\\n      <h1>\\n          {{title}}\\n      </h1>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/tobias/github/abarbanell/limitless-garden/public/spa/app/home/home.component.html\n// module id = ../../../../../public/spa/app/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  title = 'Spa app for Angular 5!';\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/tobias/github/abarbanell/limitless-garden/public/spa/app/home/home.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"a.navbar-brand { padding-top: 0px; }\\n\\n.navbar {\\n  background-color: #d5ffd5;\\n  height: 50px;\\n}\\n.navbar-inverse {\\n  background-color: darkgreen;\\n  color: yellow;\\n}\\n\\n.navbar-inverse > li > a {\\n  color:blue;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/tobias/github/abarbanell/limitless-garden/public/spa/app/navbar/navbar.component.css\n// module id = ../../../../../public/spa/app/navbar/navbar.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-fixed-top\\\">\\n  <div class=\\\"container\\\">\\n    <!-- Brand and toggle get grouped for better mobile display -->\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#lgnavbar\\\" aria-expanded=\\\"false\\\">\\n                <span class=\\\"sr-only\\\">Toggle Navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n        <img src=\\\"assets/img/logo.png\\\" alt=\\\"SPA\\\" height=\\\"50\\\" width=\\\"50\\\">\\n      </a>\\n    </div>\\n\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\n    <div class=\\\"collapse navbar-collapse navbar-left\\\" id=\\\"lgnavbar\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li>\\n          <a routerLink=\\\"\\\"> Home </a>\\n        </li>\\n        <li>\\n          <a *ngIf=\\\"isLoggedin\\\" routerLink=\\\"#data\\\">Data</a>\\n        </li>\\n    \\n        <li *ngIf=\\\"isLoggedin\\\" >\\n          <a href=\\\"/logout\\\"> (Logout)</a>\\n        </li>\\n        <li *ngIf=\\\"!isLoggedin\\\">\\n          <a  href=\\\"/login\\\"> (Login)</a>\\n        </li>\\n    \\n      </ul>\\n    </div>\\n    <!-- /.navbar-collapse -->\\n\\n  </div>\\n</nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/tobias/github/abarbanell/limitless-garden/public/spa/app/navbar/navbar.component.html\n// module id = ../../../../../public/spa/app/navbar/navbar.component.html\n// module chunks = main","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  isLoggedin = false;\n  userName = \"not logged in\";\n\n  constructor(\n    private _authService: AuthService, \n    private _router: Router,\n    private cdRef:ChangeDetectorRef\n  ) { \n    console.log(\"NavbarComponent.constructor()\");\n    this._authService.initialized.subscribe(s => {\n      this.isLoggedin = s;\n      this.userName = this._authService.user.displayName;\n      this.cdRef.detectChanges();\n      console.log(\"NavBarComponent got auth status: \"+ s + this._authService.user)\n    })\n  }\n\n  ngOnInit() {\n    console.log(\"NavbarComponent.ngOnInit()\");\n\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/tobias/github/abarbanell/limitless-garden/public/spa/app/navbar/navbar.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/tobias/github/abarbanell/limitless-garden/public/spa/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/tobias/github/abarbanell/limitless-garden/public/spa/main.ts"],"sourceRoot":"webpack:///"}